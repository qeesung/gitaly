// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal.proto

package gitalypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WalkReposRequest struct {
	StorageName          string   `protobuf:"bytes,1,opt,name=storage_name,json=storageName,proto3" json:"storage_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalkReposRequest) Reset()         { *m = WalkReposRequest{} }
func (m *WalkReposRequest) String() string { return proto.CompactTextString(m) }
func (*WalkReposRequest) ProtoMessage()    {}
func (*WalkReposRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{0}
}

func (m *WalkReposRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalkReposRequest.Unmarshal(m, b)
}
func (m *WalkReposRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalkReposRequest.Marshal(b, m, deterministic)
}
func (m *WalkReposRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalkReposRequest.Merge(m, src)
}
func (m *WalkReposRequest) XXX_Size() int {
	return xxx_messageInfo_WalkReposRequest.Size(m)
}
func (m *WalkReposRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WalkReposRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WalkReposRequest proto.InternalMessageInfo

func (m *WalkReposRequest) GetStorageName() string {
	if m != nil {
		return m.StorageName
	}
	return ""
}

type WalkReposResponse struct {
	RelativePath         string   `protobuf:"bytes,1,opt,name=relative_path,json=relativePath,proto3" json:"relative_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalkReposResponse) Reset()         { *m = WalkReposResponse{} }
func (m *WalkReposResponse) String() string { return proto.CompactTextString(m) }
func (*WalkReposResponse) ProtoMessage()    {}
func (*WalkReposResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{1}
}

func (m *WalkReposResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalkReposResponse.Unmarshal(m, b)
}
func (m *WalkReposResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalkReposResponse.Marshal(b, m, deterministic)
}
func (m *WalkReposResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalkReposResponse.Merge(m, src)
}
func (m *WalkReposResponse) XXX_Size() int {
	return xxx_messageInfo_WalkReposResponse.Size(m)
}
func (m *WalkReposResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WalkReposResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WalkReposResponse proto.InternalMessageInfo

func (m *WalkReposResponse) GetRelativePath() string {
	if m != nil {
		return m.RelativePath
	}
	return ""
}

func init() {
	proto.RegisterType((*WalkReposRequest)(nil), "gitaly.WalkReposRequest")
	proto.RegisterType((*WalkReposResponse)(nil), "gitaly.WalkReposResponse")
}

func init() { proto.RegisterFile("internal.proto", fileDescriptor_41f4a519b878ee3b) }

var fileDescriptor_41f4a519b878ee3b = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0xcf, 0x2c, 0x49,
	0xcc, 0xa9, 0x94, 0xe2, 0xca, 0xc9, 0xcc, 0x2b, 0x81, 0x88, 0x29, 0x59, 0x73, 0x09, 0x84, 0x27,
	0xe6, 0x64, 0x07, 0xa5, 0x16, 0xe4, 0x17, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xa9,
	0x73, 0xf1, 0x14, 0x97, 0xe4, 0x17, 0x25, 0xa6, 0xa7, 0xc6, 0xe7, 0x25, 0xe6, 0xa6, 0x4a, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x3a, 0xb1, 0x74, 0x1c, 0xd3, 0x61, 0x0c, 0xe2, 0x86, 0xca, 0xf8, 0x25,
	0xe6, 0xa6, 0x2a, 0x59, 0x70, 0x09, 0x22, 0x69, 0x2e, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x52,
	0xe6, 0xe2, 0x2d, 0x4a, 0xcd, 0x49, 0x2c, 0xc9, 0x2c, 0x4b, 0x8d, 0x2f, 0x48, 0x2c, 0xc9, 0x80,
	0x68, 0x0f, 0xe2, 0x81, 0x09, 0x06, 0x24, 0x96, 0x64, 0x18, 0xc5, 0x71, 0xf1, 0x79, 0x42, 0x1d,
	0xe7, 0x0e, 0x76, 0x94, 0x90, 0x0f, 0x17, 0x27, 0xdc, 0x2c, 0x21, 0x09, 0x3d, 0x88, 0x53, 0xf5,
	0xd0, 0xdd, 0x26, 0x25, 0x89, 0x45, 0x06, 0x62, 0xb1, 0x12, 0xc7, 0xaf, 0xe9, 0x1a, 0x2c, 0x1c,
	0x4c, 0x02, 0x4c, 0x06, 0x8c, 0x4e, 0x26, 0x51, 0x46, 0xe9, 0x99, 0x25, 0x39, 0x89, 0x49, 0x7a,
	0xc9, 0xf9, 0xb9, 0xfa, 0x10, 0xa6, 0x6e, 0x7e, 0x51, 0xba, 0x3e, 0x44, 0xb7, 0x7e, 0x99, 0xa1,
	0x89, 0x3e, 0x38, 0x00, 0xf4, 0xd3, 0xf3, 0xa1, 0x62, 0x05, 0x49, 0x49, 0x6c, 0x60, 0x21, 0x63,
	0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x5c, 0x16, 0x45, 0x39, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InternalGitalyClient is the client API for InternalGitaly service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InternalGitalyClient interface {
	// WalkRepos walks the storage and streams back all known git repos on the
	// requested storage
	WalkRepos(ctx context.Context, in *WalkReposRequest, opts ...grpc.CallOption) (InternalGitaly_WalkReposClient, error)
}

type internalGitalyClient struct {
	cc *grpc.ClientConn
}

func NewInternalGitalyClient(cc *grpc.ClientConn) InternalGitalyClient {
	return &internalGitalyClient{cc}
}

func (c *internalGitalyClient) WalkRepos(ctx context.Context, in *WalkReposRequest, opts ...grpc.CallOption) (InternalGitaly_WalkReposClient, error) {
	stream, err := c.cc.NewStream(ctx, &_InternalGitaly_serviceDesc.Streams[0], "/gitaly.InternalGitaly/WalkRepos", opts...)
	if err != nil {
		return nil, err
	}
	x := &internalGitalyWalkReposClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type InternalGitaly_WalkReposClient interface {
	Recv() (*WalkReposResponse, error)
	grpc.ClientStream
}

type internalGitalyWalkReposClient struct {
	grpc.ClientStream
}

func (x *internalGitalyWalkReposClient) Recv() (*WalkReposResponse, error) {
	m := new(WalkReposResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// InternalGitalyServer is the server API for InternalGitaly service.
type InternalGitalyServer interface {
	// WalkRepos walks the storage and streams back all known git repos on the
	// requested storage
	WalkRepos(*WalkReposRequest, InternalGitaly_WalkReposServer) error
}

// UnimplementedInternalGitalyServer can be embedded to have forward compatible implementations.
type UnimplementedInternalGitalyServer struct {
}

func (*UnimplementedInternalGitalyServer) WalkRepos(req *WalkReposRequest, srv InternalGitaly_WalkReposServer) error {
	return status.Errorf(codes.Unimplemented, "method WalkRepos not implemented")
}

func RegisterInternalGitalyServer(s *grpc.Server, srv InternalGitalyServer) {
	s.RegisterService(&_InternalGitaly_serviceDesc, srv)
}

func _InternalGitaly_WalkRepos_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WalkReposRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InternalGitalyServer).WalkRepos(m, &internalGitalyWalkReposServer{stream})
}

type InternalGitaly_WalkReposServer interface {
	Send(*WalkReposResponse) error
	grpc.ServerStream
}

type internalGitalyWalkReposServer struct {
	grpc.ServerStream
}

func (x *internalGitalyWalkReposServer) Send(m *WalkReposResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _InternalGitaly_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gitaly.InternalGitaly",
	HandlerType: (*InternalGitalyServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WalkRepos",
			Handler:       _InternalGitaly_WalkRepos_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "internal.proto",
}
