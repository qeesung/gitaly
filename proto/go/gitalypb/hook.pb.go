// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hook.proto

package gitalypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReferenceTransactionHookRequest_State int32

const (
	ReferenceTransactionHookRequest_PREPARED  ReferenceTransactionHookRequest_State = 0
	ReferenceTransactionHookRequest_COMMITTED ReferenceTransactionHookRequest_State = 1
	ReferenceTransactionHookRequest_ABORTED   ReferenceTransactionHookRequest_State = 2
)

var ReferenceTransactionHookRequest_State_name = map[int32]string{
	0: "PREPARED",
	1: "COMMITTED",
	2: "ABORTED",
}

var ReferenceTransactionHookRequest_State_value = map[string]int32{
	"PREPARED":  0,
	"COMMITTED": 1,
	"ABORTED":   2,
}

func (x ReferenceTransactionHookRequest_State) String() string {
	return proto.EnumName(ReferenceTransactionHookRequest_State_name, int32(x))
}

func (ReferenceTransactionHookRequest_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{6, 0}
}

type PreReceiveHookRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	EnvironmentVariables []string    `protobuf:"bytes,2,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty"`
	Stdin                []byte      `protobuf:"bytes,4,opt,name=stdin,proto3" json:"stdin,omitempty"`
	GitPushOptions       []string    `protobuf:"bytes,5,rep,name=git_push_options,json=gitPushOptions,proto3" json:"git_push_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PreReceiveHookRequest) Reset()         { *m = PreReceiveHookRequest{} }
func (m *PreReceiveHookRequest) String() string { return proto.CompactTextString(m) }
func (*PreReceiveHookRequest) ProtoMessage()    {}
func (*PreReceiveHookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{0}
}

func (m *PreReceiveHookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreReceiveHookRequest.Unmarshal(m, b)
}
func (m *PreReceiveHookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreReceiveHookRequest.Marshal(b, m, deterministic)
}
func (m *PreReceiveHookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreReceiveHookRequest.Merge(m, src)
}
func (m *PreReceiveHookRequest) XXX_Size() int {
	return xxx_messageInfo_PreReceiveHookRequest.Size(m)
}
func (m *PreReceiveHookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PreReceiveHookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PreReceiveHookRequest proto.InternalMessageInfo

func (m *PreReceiveHookRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *PreReceiveHookRequest) GetEnvironmentVariables() []string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *PreReceiveHookRequest) GetStdin() []byte {
	if m != nil {
		return m.Stdin
	}
	return nil
}

func (m *PreReceiveHookRequest) GetGitPushOptions() []string {
	if m != nil {
		return m.GitPushOptions
	}
	return nil
}

type PreReceiveHookResponse struct {
	Stdout               []byte      `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte      `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitStatus           *ExitStatus `protobuf:"bytes,3,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PreReceiveHookResponse) Reset()         { *m = PreReceiveHookResponse{} }
func (m *PreReceiveHookResponse) String() string { return proto.CompactTextString(m) }
func (*PreReceiveHookResponse) ProtoMessage()    {}
func (*PreReceiveHookResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{1}
}

func (m *PreReceiveHookResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreReceiveHookResponse.Unmarshal(m, b)
}
func (m *PreReceiveHookResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreReceiveHookResponse.Marshal(b, m, deterministic)
}
func (m *PreReceiveHookResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreReceiveHookResponse.Merge(m, src)
}
func (m *PreReceiveHookResponse) XXX_Size() int {
	return xxx_messageInfo_PreReceiveHookResponse.Size(m)
}
func (m *PreReceiveHookResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PreReceiveHookResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PreReceiveHookResponse proto.InternalMessageInfo

func (m *PreReceiveHookResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *PreReceiveHookResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *PreReceiveHookResponse) GetExitStatus() *ExitStatus {
	if m != nil {
		return m.ExitStatus
	}
	return nil
}

type PostReceiveHookRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	EnvironmentVariables []string    `protobuf:"bytes,2,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty"`
	Stdin                []byte      `protobuf:"bytes,3,opt,name=stdin,proto3" json:"stdin,omitempty"`
	GitPushOptions       []string    `protobuf:"bytes,4,rep,name=git_push_options,json=gitPushOptions,proto3" json:"git_push_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PostReceiveHookRequest) Reset()         { *m = PostReceiveHookRequest{} }
func (m *PostReceiveHookRequest) String() string { return proto.CompactTextString(m) }
func (*PostReceiveHookRequest) ProtoMessage()    {}
func (*PostReceiveHookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{2}
}

func (m *PostReceiveHookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostReceiveHookRequest.Unmarshal(m, b)
}
func (m *PostReceiveHookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostReceiveHookRequest.Marshal(b, m, deterministic)
}
func (m *PostReceiveHookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostReceiveHookRequest.Merge(m, src)
}
func (m *PostReceiveHookRequest) XXX_Size() int {
	return xxx_messageInfo_PostReceiveHookRequest.Size(m)
}
func (m *PostReceiveHookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostReceiveHookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostReceiveHookRequest proto.InternalMessageInfo

func (m *PostReceiveHookRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *PostReceiveHookRequest) GetEnvironmentVariables() []string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *PostReceiveHookRequest) GetStdin() []byte {
	if m != nil {
		return m.Stdin
	}
	return nil
}

func (m *PostReceiveHookRequest) GetGitPushOptions() []string {
	if m != nil {
		return m.GitPushOptions
	}
	return nil
}

type PostReceiveHookResponse struct {
	Stdout               []byte      `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte      `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitStatus           *ExitStatus `protobuf:"bytes,3,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PostReceiveHookResponse) Reset()         { *m = PostReceiveHookResponse{} }
func (m *PostReceiveHookResponse) String() string { return proto.CompactTextString(m) }
func (*PostReceiveHookResponse) ProtoMessage()    {}
func (*PostReceiveHookResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{3}
}

func (m *PostReceiveHookResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostReceiveHookResponse.Unmarshal(m, b)
}
func (m *PostReceiveHookResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostReceiveHookResponse.Marshal(b, m, deterministic)
}
func (m *PostReceiveHookResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostReceiveHookResponse.Merge(m, src)
}
func (m *PostReceiveHookResponse) XXX_Size() int {
	return xxx_messageInfo_PostReceiveHookResponse.Size(m)
}
func (m *PostReceiveHookResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostReceiveHookResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostReceiveHookResponse proto.InternalMessageInfo

func (m *PostReceiveHookResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *PostReceiveHookResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *PostReceiveHookResponse) GetExitStatus() *ExitStatus {
	if m != nil {
		return m.ExitStatus
	}
	return nil
}

type UpdateHookRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	EnvironmentVariables []string    `protobuf:"bytes,2,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty"`
	Ref                  []byte      `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
	OldValue             string      `protobuf:"bytes,4,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue             string      `protobuf:"bytes,5,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateHookRequest) Reset()         { *m = UpdateHookRequest{} }
func (m *UpdateHookRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateHookRequest) ProtoMessage()    {}
func (*UpdateHookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{4}
}

func (m *UpdateHookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHookRequest.Unmarshal(m, b)
}
func (m *UpdateHookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHookRequest.Marshal(b, m, deterministic)
}
func (m *UpdateHookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHookRequest.Merge(m, src)
}
func (m *UpdateHookRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateHookRequest.Size(m)
}
func (m *UpdateHookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHookRequest proto.InternalMessageInfo

func (m *UpdateHookRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UpdateHookRequest) GetEnvironmentVariables() []string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *UpdateHookRequest) GetRef() []byte {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *UpdateHookRequest) GetOldValue() string {
	if m != nil {
		return m.OldValue
	}
	return ""
}

func (m *UpdateHookRequest) GetNewValue() string {
	if m != nil {
		return m.NewValue
	}
	return ""
}

type UpdateHookResponse struct {
	Stdout               []byte      `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte      `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitStatus           *ExitStatus `protobuf:"bytes,3,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateHookResponse) Reset()         { *m = UpdateHookResponse{} }
func (m *UpdateHookResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateHookResponse) ProtoMessage()    {}
func (*UpdateHookResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{5}
}

func (m *UpdateHookResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHookResponse.Unmarshal(m, b)
}
func (m *UpdateHookResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHookResponse.Marshal(b, m, deterministic)
}
func (m *UpdateHookResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHookResponse.Merge(m, src)
}
func (m *UpdateHookResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateHookResponse.Size(m)
}
func (m *UpdateHookResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHookResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHookResponse proto.InternalMessageInfo

func (m *UpdateHookResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *UpdateHookResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *UpdateHookResponse) GetExitStatus() *ExitStatus {
	if m != nil {
		return m.ExitStatus
	}
	return nil
}

type ReferenceTransactionHookRequest struct {
	Repository           *Repository                           `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	EnvironmentVariables []string                              `protobuf:"bytes,2,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty"`
	Stdin                []byte                                `protobuf:"bytes,3,opt,name=stdin,proto3" json:"stdin,omitempty"`
	State                ReferenceTransactionHookRequest_State `protobuf:"varint,4,opt,name=state,proto3,enum=gitaly.ReferenceTransactionHookRequest_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ReferenceTransactionHookRequest) Reset()         { *m = ReferenceTransactionHookRequest{} }
func (m *ReferenceTransactionHookRequest) String() string { return proto.CompactTextString(m) }
func (*ReferenceTransactionHookRequest) ProtoMessage()    {}
func (*ReferenceTransactionHookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{6}
}

func (m *ReferenceTransactionHookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceTransactionHookRequest.Unmarshal(m, b)
}
func (m *ReferenceTransactionHookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceTransactionHookRequest.Marshal(b, m, deterministic)
}
func (m *ReferenceTransactionHookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceTransactionHookRequest.Merge(m, src)
}
func (m *ReferenceTransactionHookRequest) XXX_Size() int {
	return xxx_messageInfo_ReferenceTransactionHookRequest.Size(m)
}
func (m *ReferenceTransactionHookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceTransactionHookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceTransactionHookRequest proto.InternalMessageInfo

func (m *ReferenceTransactionHookRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *ReferenceTransactionHookRequest) GetEnvironmentVariables() []string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *ReferenceTransactionHookRequest) GetStdin() []byte {
	if m != nil {
		return m.Stdin
	}
	return nil
}

func (m *ReferenceTransactionHookRequest) GetState() ReferenceTransactionHookRequest_State {
	if m != nil {
		return m.State
	}
	return ReferenceTransactionHookRequest_PREPARED
}

type ReferenceTransactionHookResponse struct {
	Stdout               []byte      `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte      `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitStatus           *ExitStatus `protobuf:"bytes,3,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReferenceTransactionHookResponse) Reset()         { *m = ReferenceTransactionHookResponse{} }
func (m *ReferenceTransactionHookResponse) String() string { return proto.CompactTextString(m) }
func (*ReferenceTransactionHookResponse) ProtoMessage()    {}
func (*ReferenceTransactionHookResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{7}
}

func (m *ReferenceTransactionHookResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceTransactionHookResponse.Unmarshal(m, b)
}
func (m *ReferenceTransactionHookResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceTransactionHookResponse.Marshal(b, m, deterministic)
}
func (m *ReferenceTransactionHookResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceTransactionHookResponse.Merge(m, src)
}
func (m *ReferenceTransactionHookResponse) XXX_Size() int {
	return xxx_messageInfo_ReferenceTransactionHookResponse.Size(m)
}
func (m *ReferenceTransactionHookResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceTransactionHookResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceTransactionHookResponse proto.InternalMessageInfo

func (m *ReferenceTransactionHookResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *ReferenceTransactionHookResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *ReferenceTransactionHookResponse) GetExitStatus() *ExitStatus {
	if m != nil {
		return m.ExitStatus
	}
	return nil
}

type PackObjectsHookRequest struct {
	Repository *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	// args contains the arguments passed to the pack-objects hook, without the leading "git"
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// stdin is meant for consumption by git-pack-objects
	Stdin                []byte   `protobuf:"bytes,3,opt,name=stdin,proto3" json:"stdin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackObjectsHookRequest) Reset()         { *m = PackObjectsHookRequest{} }
func (m *PackObjectsHookRequest) String() string { return proto.CompactTextString(m) }
func (*PackObjectsHookRequest) ProtoMessage()    {}
func (*PackObjectsHookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{8}
}

func (m *PackObjectsHookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackObjectsHookRequest.Unmarshal(m, b)
}
func (m *PackObjectsHookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackObjectsHookRequest.Marshal(b, m, deterministic)
}
func (m *PackObjectsHookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackObjectsHookRequest.Merge(m, src)
}
func (m *PackObjectsHookRequest) XXX_Size() int {
	return xxx_messageInfo_PackObjectsHookRequest.Size(m)
}
func (m *PackObjectsHookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PackObjectsHookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PackObjectsHookRequest proto.InternalMessageInfo

func (m *PackObjectsHookRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *PackObjectsHookRequest) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *PackObjectsHookRequest) GetStdin() []byte {
	if m != nil {
		return m.Stdin
	}
	return nil
}

type PackObjectsHookResponse struct {
	// stdout contains packfile data
	Stdout []byte `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// stderr contains progress messages (such as "Enumerating objects ...")
	Stderr               []byte   `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackObjectsHookResponse) Reset()         { *m = PackObjectsHookResponse{} }
func (m *PackObjectsHookResponse) String() string { return proto.CompactTextString(m) }
func (*PackObjectsHookResponse) ProtoMessage()    {}
func (*PackObjectsHookResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eef30da1c11ee1b, []int{9}
}

func (m *PackObjectsHookResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackObjectsHookResponse.Unmarshal(m, b)
}
func (m *PackObjectsHookResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackObjectsHookResponse.Marshal(b, m, deterministic)
}
func (m *PackObjectsHookResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackObjectsHookResponse.Merge(m, src)
}
func (m *PackObjectsHookResponse) XXX_Size() int {
	return xxx_messageInfo_PackObjectsHookResponse.Size(m)
}
func (m *PackObjectsHookResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PackObjectsHookResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PackObjectsHookResponse proto.InternalMessageInfo

func (m *PackObjectsHookResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *PackObjectsHookResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func init() {
	proto.RegisterEnum("gitaly.ReferenceTransactionHookRequest_State", ReferenceTransactionHookRequest_State_name, ReferenceTransactionHookRequest_State_value)
	proto.RegisterType((*PreReceiveHookRequest)(nil), "gitaly.PreReceiveHookRequest")
	proto.RegisterType((*PreReceiveHookResponse)(nil), "gitaly.PreReceiveHookResponse")
	proto.RegisterType((*PostReceiveHookRequest)(nil), "gitaly.PostReceiveHookRequest")
	proto.RegisterType((*PostReceiveHookResponse)(nil), "gitaly.PostReceiveHookResponse")
	proto.RegisterType((*UpdateHookRequest)(nil), "gitaly.UpdateHookRequest")
	proto.RegisterType((*UpdateHookResponse)(nil), "gitaly.UpdateHookResponse")
	proto.RegisterType((*ReferenceTransactionHookRequest)(nil), "gitaly.ReferenceTransactionHookRequest")
	proto.RegisterType((*ReferenceTransactionHookResponse)(nil), "gitaly.ReferenceTransactionHookResponse")
	proto.RegisterType((*PackObjectsHookRequest)(nil), "gitaly.PackObjectsHookRequest")
	proto.RegisterType((*PackObjectsHookResponse)(nil), "gitaly.PackObjectsHookResponse")
}

func init() { proto.RegisterFile("hook.proto", fileDescriptor_3eef30da1c11ee1b) }

var fileDescriptor_3eef30da1c11ee1b = []byte{
	// 649 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4d, 0x6f, 0xd3, 0x4a,
	0x14, 0x7d, 0xce, 0xd7, 0x6b, 0x6e, 0xf2, 0xfa, 0xc2, 0xa8, 0x4d, 0x8d, 0x11, 0x34, 0xf2, 0x06,
	0x2f, 0x68, 0xd2, 0xa6, 0x5d, 0xb0, 0xed, 0x47, 0x24, 0xba, 0xa8, 0x12, 0x4d, 0x4b, 0x17, 0x20,
	0x11, 0x39, 0xce, 0xad, 0x33, 0xd4, 0xf5, 0x98, 0x99, 0x49, 0xda, 0x48, 0xc0, 0x96, 0x9f, 0x00,
	0x2b, 0x7e, 0x4e, 0xd9, 0xf1, 0x6b, 0x58, 0xb1, 0x42, 0xb6, 0x93, 0x36, 0x69, 0x1d, 0x8a, 0x10,
	0x2a, 0xdd, 0xcd, 0xbd, 0x67, 0xe6, 0xcc, 0x9c, 0x73, 0x6f, 0x6e, 0x0c, 0xd0, 0xe3, 0xfc, 0xb8,
	0x1a, 0x08, 0xae, 0x38, 0xc9, 0xb9, 0x4c, 0xd9, 0xde, 0xd0, 0x00, 0x8f, 0xf9, 0x2a, 0xce, 0x19,
	0x45, 0xd9, 0xb3, 0x05, 0x76, 0xe3, 0xc8, 0x3c, 0xd7, 0x60, 0xb1, 0x25, 0x90, 0xa2, 0x83, 0x6c,
	0x80, 0xcf, 0x38, 0x3f, 0xa6, 0xf8, 0xa6, 0x8f, 0x52, 0x91, 0xa7, 0x00, 0x02, 0x03, 0x2e, 0x99,
	0xe2, 0x62, 0xa8, 0x6b, 0x15, 0xcd, 0x2a, 0xd4, 0x49, 0x35, 0x26, 0xac, 0xd2, 0x0b, 0x64, 0x2b,
	0xf3, 0xe9, 0xfc, 0x89, 0x46, 0x27, 0xf6, 0x92, 0x75, 0x58, 0x44, 0x7f, 0xc0, 0x04, 0xf7, 0x4f,
	0xd0, 0x57, 0xed, 0x81, 0x2d, 0x98, 0xdd, 0xf1, 0x50, 0xea, 0xa9, 0x4a, 0xda, 0xca, 0xd3, 0x85,
	0x09, 0xf0, 0x70, 0x8c, 0x91, 0x05, 0xc8, 0x4a, 0xd5, 0x65, 0xbe, 0x9e, 0xa9, 0x68, 0x56, 0x91,
	0xc6, 0x01, 0xb1, 0xa0, 0xe4, 0x32, 0xd5, 0x0e, 0xfa, 0xb2, 0xd7, 0xe6, 0x81, 0x62, 0xdc, 0x97,
	0x7a, 0x36, 0x62, 0x99, 0x77, 0x99, 0x6a, 0xf5, 0x65, 0xaf, 0x19, 0x67, 0xcd, 0x77, 0x50, 0xbe,
	0xaa, 0x43, 0x06, 0xdc, 0x97, 0x48, 0xca, 0x90, 0x93, 0xaa, 0xcb, 0xfb, 0x2a, 0x12, 0x51, 0xa4,
	0xa3, 0x68, 0x94, 0x47, 0x21, 0xf4, 0xd4, 0x45, 0x1e, 0x85, 0x20, 0xeb, 0x50, 0xc0, 0x33, 0xa6,
	0xda, 0x52, 0xd9, 0xaa, 0x2f, 0xf5, 0xf4, 0xb4, 0xf2, 0xc6, 0x19, 0x53, 0xfb, 0x11, 0x42, 0x01,
	0x2f, 0xd6, 0xe6, 0x17, 0x0d, 0xca, 0x2d, 0x2e, 0xd5, 0x1d, 0x32, 0x32, 0x7d, 0x93, 0x91, 0x99,
	0x44, 0x23, 0xdf, 0xc3, 0xd2, 0x35, 0x21, 0xb7, 0xe9, 0xe4, 0x57, 0x0d, 0xee, 0x3d, 0x0f, 0xba,
	0xb6, 0xfa, 0x9b, 0x26, 0x96, 0x20, 0x2d, 0xf0, 0x68, 0x64, 0x61, 0xb8, 0x24, 0x0f, 0x20, 0xcf,
	0xbd, 0x6e, 0x7b, 0x60, 0x7b, 0x7d, 0x8c, 0x7a, 0x34, 0x4f, 0xe7, 0xb8, 0xd7, 0x3d, 0x0c, 0xe3,
	0x10, 0xf4, 0xf1, 0x74, 0x04, 0x66, 0x63, 0xd0, 0xc7, 0xd3, 0x08, 0x34, 0x87, 0x40, 0x26, 0xf5,
	0xdc, 0xa6, 0x97, 0x9f, 0x53, 0xb0, 0x4c, 0xf1, 0x08, 0x05, 0xfa, 0x0e, 0x1e, 0x08, 0xdb, 0x97,
	0xb6, 0x13, 0x56, 0xf9, 0xce, 0xb5, 0xe7, 0x76, 0x98, 0xb5, 0x55, 0xec, 0xec, 0x7c, 0x7d, 0xe5,
	0xf2, 0xfe, 0x9f, 0x3e, 0xbe, 0x1a, 0xea, 0x44, 0x1a, 0x9f, 0x35, 0xd7, 0x20, 0x1b, 0xc5, 0xa4,
	0x08, 0x73, 0x2d, 0xda, 0x68, 0x6d, 0xd2, 0xc6, 0x4e, 0xe9, 0x1f, 0xf2, 0x1f, 0xe4, 0xb7, 0x9b,
	0x7b, 0x7b, 0xbb, 0x07, 0x07, 0x8d, 0x9d, 0x92, 0x46, 0x0a, 0xf0, 0xef, 0xe6, 0x56, 0x93, 0x86,
	0x41, 0xca, 0xfc, 0xa0, 0x41, 0x65, 0xf6, 0x1d, 0xb7, 0x59, 0xaa, 0xb7, 0x50, 0x6e, 0xd9, 0xce,
	0x71, 0xb3, 0xf3, 0x1a, 0x1d, 0x25, 0xff, 0x4c, 0x81, 0x08, 0x64, 0x6c, 0xe1, 0x8e, 0xeb, 0x11,
	0xad, 0x93, 0xfd, 0x37, 0x77, 0x61, 0xe9, 0xda, 0xed, 0xbf, 0xa7, 0xbe, 0xfe, 0x2d, 0x0d, 0x85,
	0x90, 0x60, 0x1f, 0xc5, 0x80, 0x39, 0x48, 0x5e, 0xc2, 0xfc, 0xf4, 0x60, 0x26, 0x0f, 0xc7, 0x8f,
	0x4f, 0xfc, 0xe3, 0x31, 0x1e, 0xcd, 0x82, 0xe3, 0x07, 0x99, 0xb9, 0xef, 0x1f, 0xad, 0xd4, 0x5c,
	0xca, 0xd2, 0x56, 0x35, 0xf2, 0x0a, 0xfe, 0xbf, 0x32, 0xac, 0xc8, 0xe5, 0xf1, 0xc4, 0x71, 0x6c,
	0x2c, 0xcf, 0xc4, 0x13, 0xf8, 0xf7, 0x00, 0x2e, 0x7f, 0xbb, 0xe4, 0xfe, 0xf8, 0xe8, 0xb5, 0xf9,
	0x64, 0x18, 0x49, 0xd0, 0x34, 0xe1, 0xaa, 0x46, 0x86, 0xa0, 0xcf, 0xea, 0x36, 0xf2, 0xf8, 0x17,
	0x7b, 0xde, 0xb0, 0x6e, 0xde, 0x38, 0xc3, 0xa9, 0xe9, 0x0a, 0x4f, 0x38, 0x95, 0xd8, 0x78, 0x13,
	0x4e, 0x25, 0xb7, 0xc6, 0x24, 0xff, 0xd6, 0xc6, 0x8b, 0xba, 0xcb, 0x94, 0x67, 0x77, 0xaa, 0x0e,
	0x3f, 0xa9, 0xc5, 0xcb, 0x15, 0x2e, 0xdc, 0x5a, 0xcc, 0x51, 0x1b, 0xac, 0x6d, 0xd4, 0xa2, 0x4f,
	0x8e, 0x9a, 0xcb, 0x47, 0xb9, 0xa0, 0xd3, 0xc9, 0x45, 0xa9, 0xf5, 0x1f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xde, 0xf8, 0x7f, 0xae, 0xb5, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HookServiceClient is the client API for HookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HookServiceClient interface {
	PreReceiveHook(ctx context.Context, opts ...grpc.CallOption) (HookService_PreReceiveHookClient, error)
	PostReceiveHook(ctx context.Context, opts ...grpc.CallOption) (HookService_PostReceiveHookClient, error)
	UpdateHook(ctx context.Context, in *UpdateHookRequest, opts ...grpc.CallOption) (HookService_UpdateHookClient, error)
	ReferenceTransactionHook(ctx context.Context, opts ...grpc.CallOption) (HookService_ReferenceTransactionHookClient, error)
	// PackObjectsHook is meant to be called by git-upload-pack via the
	// uploadpack.packObjectsHook mechanism. It generates a stream of packed
	// Git objects.
	PackObjectsHook(ctx context.Context, opts ...grpc.CallOption) (HookService_PackObjectsHookClient, error)
}

type hookServiceClient struct {
	cc *grpc.ClientConn
}

func NewHookServiceClient(cc *grpc.ClientConn) HookServiceClient {
	return &hookServiceClient{cc}
}

func (c *hookServiceClient) PreReceiveHook(ctx context.Context, opts ...grpc.CallOption) (HookService_PreReceiveHookClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HookService_serviceDesc.Streams[0], "/gitaly.HookService/PreReceiveHook", opts...)
	if err != nil {
		return nil, err
	}
	x := &hookServicePreReceiveHookClient{stream}
	return x, nil
}

type HookService_PreReceiveHookClient interface {
	Send(*PreReceiveHookRequest) error
	Recv() (*PreReceiveHookResponse, error)
	grpc.ClientStream
}

type hookServicePreReceiveHookClient struct {
	grpc.ClientStream
}

func (x *hookServicePreReceiveHookClient) Send(m *PreReceiveHookRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hookServicePreReceiveHookClient) Recv() (*PreReceiveHookResponse, error) {
	m := new(PreReceiveHookResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hookServiceClient) PostReceiveHook(ctx context.Context, opts ...grpc.CallOption) (HookService_PostReceiveHookClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HookService_serviceDesc.Streams[1], "/gitaly.HookService/PostReceiveHook", opts...)
	if err != nil {
		return nil, err
	}
	x := &hookServicePostReceiveHookClient{stream}
	return x, nil
}

type HookService_PostReceiveHookClient interface {
	Send(*PostReceiveHookRequest) error
	Recv() (*PostReceiveHookResponse, error)
	grpc.ClientStream
}

type hookServicePostReceiveHookClient struct {
	grpc.ClientStream
}

func (x *hookServicePostReceiveHookClient) Send(m *PostReceiveHookRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hookServicePostReceiveHookClient) Recv() (*PostReceiveHookResponse, error) {
	m := new(PostReceiveHookResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hookServiceClient) UpdateHook(ctx context.Context, in *UpdateHookRequest, opts ...grpc.CallOption) (HookService_UpdateHookClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HookService_serviceDesc.Streams[2], "/gitaly.HookService/UpdateHook", opts...)
	if err != nil {
		return nil, err
	}
	x := &hookServiceUpdateHookClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HookService_UpdateHookClient interface {
	Recv() (*UpdateHookResponse, error)
	grpc.ClientStream
}

type hookServiceUpdateHookClient struct {
	grpc.ClientStream
}

func (x *hookServiceUpdateHookClient) Recv() (*UpdateHookResponse, error) {
	m := new(UpdateHookResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hookServiceClient) ReferenceTransactionHook(ctx context.Context, opts ...grpc.CallOption) (HookService_ReferenceTransactionHookClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HookService_serviceDesc.Streams[3], "/gitaly.HookService/ReferenceTransactionHook", opts...)
	if err != nil {
		return nil, err
	}
	x := &hookServiceReferenceTransactionHookClient{stream}
	return x, nil
}

type HookService_ReferenceTransactionHookClient interface {
	Send(*ReferenceTransactionHookRequest) error
	Recv() (*ReferenceTransactionHookResponse, error)
	grpc.ClientStream
}

type hookServiceReferenceTransactionHookClient struct {
	grpc.ClientStream
}

func (x *hookServiceReferenceTransactionHookClient) Send(m *ReferenceTransactionHookRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hookServiceReferenceTransactionHookClient) Recv() (*ReferenceTransactionHookResponse, error) {
	m := new(ReferenceTransactionHookResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hookServiceClient) PackObjectsHook(ctx context.Context, opts ...grpc.CallOption) (HookService_PackObjectsHookClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HookService_serviceDesc.Streams[4], "/gitaly.HookService/PackObjectsHook", opts...)
	if err != nil {
		return nil, err
	}
	x := &hookServicePackObjectsHookClient{stream}
	return x, nil
}

type HookService_PackObjectsHookClient interface {
	Send(*PackObjectsHookRequest) error
	Recv() (*PackObjectsHookResponse, error)
	grpc.ClientStream
}

type hookServicePackObjectsHookClient struct {
	grpc.ClientStream
}

func (x *hookServicePackObjectsHookClient) Send(m *PackObjectsHookRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hookServicePackObjectsHookClient) Recv() (*PackObjectsHookResponse, error) {
	m := new(PackObjectsHookResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HookServiceServer is the server API for HookService service.
type HookServiceServer interface {
	PreReceiveHook(HookService_PreReceiveHookServer) error
	PostReceiveHook(HookService_PostReceiveHookServer) error
	UpdateHook(*UpdateHookRequest, HookService_UpdateHookServer) error
	ReferenceTransactionHook(HookService_ReferenceTransactionHookServer) error
	// PackObjectsHook is meant to be called by git-upload-pack via the
	// uploadpack.packObjectsHook mechanism. It generates a stream of packed
	// Git objects.
	PackObjectsHook(HookService_PackObjectsHookServer) error
}

// UnimplementedHookServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHookServiceServer struct {
}

func (*UnimplementedHookServiceServer) PreReceiveHook(srv HookService_PreReceiveHookServer) error {
	return status.Errorf(codes.Unimplemented, "method PreReceiveHook not implemented")
}
func (*UnimplementedHookServiceServer) PostReceiveHook(srv HookService_PostReceiveHookServer) error {
	return status.Errorf(codes.Unimplemented, "method PostReceiveHook not implemented")
}
func (*UnimplementedHookServiceServer) UpdateHook(req *UpdateHookRequest, srv HookService_UpdateHookServer) error {
	return status.Errorf(codes.Unimplemented, "method UpdateHook not implemented")
}
func (*UnimplementedHookServiceServer) ReferenceTransactionHook(srv HookService_ReferenceTransactionHookServer) error {
	return status.Errorf(codes.Unimplemented, "method ReferenceTransactionHook not implemented")
}
func (*UnimplementedHookServiceServer) PackObjectsHook(srv HookService_PackObjectsHookServer) error {
	return status.Errorf(codes.Unimplemented, "method PackObjectsHook not implemented")
}

func RegisterHookServiceServer(s *grpc.Server, srv HookServiceServer) {
	s.RegisterService(&_HookService_serviceDesc, srv)
}

func _HookService_PreReceiveHook_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HookServiceServer).PreReceiveHook(&hookServicePreReceiveHookServer{stream})
}

type HookService_PreReceiveHookServer interface {
	Send(*PreReceiveHookResponse) error
	Recv() (*PreReceiveHookRequest, error)
	grpc.ServerStream
}

type hookServicePreReceiveHookServer struct {
	grpc.ServerStream
}

func (x *hookServicePreReceiveHookServer) Send(m *PreReceiveHookResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hookServicePreReceiveHookServer) Recv() (*PreReceiveHookRequest, error) {
	m := new(PreReceiveHookRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _HookService_PostReceiveHook_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HookServiceServer).PostReceiveHook(&hookServicePostReceiveHookServer{stream})
}

type HookService_PostReceiveHookServer interface {
	Send(*PostReceiveHookResponse) error
	Recv() (*PostReceiveHookRequest, error)
	grpc.ServerStream
}

type hookServicePostReceiveHookServer struct {
	grpc.ServerStream
}

func (x *hookServicePostReceiveHookServer) Send(m *PostReceiveHookResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hookServicePostReceiveHookServer) Recv() (*PostReceiveHookRequest, error) {
	m := new(PostReceiveHookRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _HookService_UpdateHook_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UpdateHookRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HookServiceServer).UpdateHook(m, &hookServiceUpdateHookServer{stream})
}

type HookService_UpdateHookServer interface {
	Send(*UpdateHookResponse) error
	grpc.ServerStream
}

type hookServiceUpdateHookServer struct {
	grpc.ServerStream
}

func (x *hookServiceUpdateHookServer) Send(m *UpdateHookResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HookService_ReferenceTransactionHook_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HookServiceServer).ReferenceTransactionHook(&hookServiceReferenceTransactionHookServer{stream})
}

type HookService_ReferenceTransactionHookServer interface {
	Send(*ReferenceTransactionHookResponse) error
	Recv() (*ReferenceTransactionHookRequest, error)
	grpc.ServerStream
}

type hookServiceReferenceTransactionHookServer struct {
	grpc.ServerStream
}

func (x *hookServiceReferenceTransactionHookServer) Send(m *ReferenceTransactionHookResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hookServiceReferenceTransactionHookServer) Recv() (*ReferenceTransactionHookRequest, error) {
	m := new(ReferenceTransactionHookRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _HookService_PackObjectsHook_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HookServiceServer).PackObjectsHook(&hookServicePackObjectsHookServer{stream})
}

type HookService_PackObjectsHookServer interface {
	Send(*PackObjectsHookResponse) error
	Recv() (*PackObjectsHookRequest, error)
	grpc.ServerStream
}

type hookServicePackObjectsHookServer struct {
	grpc.ServerStream
}

func (x *hookServicePackObjectsHookServer) Send(m *PackObjectsHookResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hookServicePackObjectsHookServer) Recv() (*PackObjectsHookRequest, error) {
	m := new(PackObjectsHookRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _HookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gitaly.HookService",
	HandlerType: (*HookServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PreReceiveHook",
			Handler:       _HookService_PreReceiveHook_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "PostReceiveHook",
			Handler:       _HookService_PostReceiveHook_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "UpdateHook",
			Handler:       _HookService_UpdateHook_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ReferenceTransactionHook",
			Handler:       _HookService_ReferenceTransactionHook_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "PackObjectsHook",
			Handler:       _HookService_PackObjectsHook_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "hook.proto",
}
